/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-indigo-100: oklch(93% 0.034 272.788);
    --color-indigo-200: oklch(87% 0.065 274.039);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-800: oklch(39.8% 0.195 277.366);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-light: 300;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-4xl: 2rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
    border-width: 0;
  }
  .\!relative {
    position: relative !important;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\.5 {
    top: calc(var(--spacing) * 1.5);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1\.5 {
    right: calc(var(--spacing) * 1.5);
  }
  .left-1 {
    left: calc(var(--spacing) * 1);
  }
  .left-1\.5 {
    left: calc(var(--spacing) * 1.5);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .isolate {
    isolation: isolate;
  }
  .z-20 {
    z-index: 20;
  }
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }
  .size-\[44\.44\%\] {
    width: 44.44%;
    height: 44.44%;
  }
  .size-\[80\%\] {
    width: 80%;
    height: 80%;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-4\/5 {
    height: calc(4/5 * 100%);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-\[44\.44\%\] {
    height: 44.44%;
  }
  .h-\[60\%\] {
    height: 60%;
  }
  .h-\[92\%\] {
    height: 92%;
  }
  .h-\[calc\(100dvh-4\.5rem\)\] {
    height: calc(100dvh - 4.5rem);
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }
  .min-h-\[60\%\] {
    min-height: 60%;
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-4\/5 {
    width: calc(4/5 * 100%);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-\[5\%\] {
    width: 5%;
  }
  .w-\[35\%\] {
    width: 35%;
  }
  .w-\[50\%\] {
    width: 50%;
  }
  .w-\[75\%\] {
    width: 75%;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .min-w-9 {
    min-width: calc(var(--spacing) * 9);
  }
  .grow {
    flex-grow: 1;
  }
  .origin-left {
    transform-origin: 0;
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .\[appearance\:textfield\] {
    appearance: textfield;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-\[auto_1\.4fr_1fr_1fr_1fr_1fr\] {
    grid-template-columns: auto 1.4fr 1fr 1fr 1fr 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-black\/10 {
    :where(& > :not(:last-child)) {
      border-color: color-mix(in srgb, #000 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
      }
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .rounded-\[0\.25rem\] {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-\[\#EAEAEA\] {
    border-color: #EAEAEA;
  }
  .border-\[\#e0e0e0\] {
    border-color: #e0e0e0;
  }
  .border-\[\#ebebeb\] {
    border-color: #ebebeb;
  }
  .border-black\/10 {
    border-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .border-t-black\/20 {
    border-top-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-top-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .border-r-black\/20 {
    border-right-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-right-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .border-b-black\/20 {
    border-bottom-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .\!bg-white {
    background-color: var(--color-white) !important;
  }
  .bg-amber-600 {
    background-color: var(--color-amber-600);
  }
  .bg-black\/5 {
    background-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-50\/50 {
    background-color: color-mix(in srgb, oklch(98.5% 0.002 247.839) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-50) 50%, transparent);
    }
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-200\/60 {
    background-color: color-mix(in srgb, oklch(92.8% 0.006 264.531) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-200) 60%, transparent);
    }
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-indigo-400 {
    background-color: var(--color-indigo-400);
  }
  .bg-indigo-400\/10 {
    background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-400) 10%, transparent);
    }
  }
  .bg-indigo-400\/20 {
    background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-400) 20%, transparent);
    }
  }
  .bg-indigo-500\/10 {
    background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-500) 10%, transparent);
    }
  }
  .bg-indigo-700\/30 {
    background-color: color-mix(in srgb, oklch(45.7% 0.24 277.023) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-700) 30%, transparent);
    }
  }
  .bg-indigo-800 {
    background-color: var(--color-indigo-800);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-purple-600 {
    --tw-gradient-from: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-indigo-600 {
    --tw-gradient-to: var(--color-indigo-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .stroke-black {
    stroke: var(--color-black);
  }
  .stroke-indigo-700 {
    stroke: var(--color-indigo-700);
  }
  .stroke-white {
    stroke: var(--color-white);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pl-9 {
    padding-left: calc(var(--spacing) * 9);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.75rem\] {
    font-size: 0.75rem;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-indigo-100 {
    color: var(--color-indigo-100);
  }
  .text-indigo-600 {
    color: var(--color-indigo-600);
  }
  .text-indigo-700 {
    color: var(--color-indigo-700);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-400 {
    color: var(--color-yellow-400);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .placeholder-black {
    &::placeholder {
      color: var(--color-black);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-black\/10 {
    --tw-ring-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .ring-black\/20 {
    --tw-ring-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .outline-black\/50 {
    outline-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-\[scale_colors\] {
    transition-property: scale colors;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .group-hover\:stroke-indigo-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-indigo-500);
      }
    }
  }
  .group-hover\:stroke-indigo-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-indigo-900);
      }
    }
  }
  .group-hover\:stroke-red-400 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-red-400);
      }
    }
  }
  .group-hover\:text-gray-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-gray-100);
      }
    }
  }
  .group-hover\:text-indigo-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-indigo-500);
      }
    }
  }
  .group-hover\:text-indigo-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-indigo-900);
      }
    }
  }
  .peer-checked\:translate-x-6 {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 6);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:bg-indigo-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-indigo-500);
    }
  }
  .peer-checked\:opacity-0 {
    &:is(:where(.peer):checked ~ *) {
      opacity: 0%;
    }
  }
  .peer-checked\:opacity-100 {
    &:is(:where(.peer):checked ~ *) {
      opacity: 100%;
    }
  }
  .peer-checked\:ring-indigo-600 {
    &:is(:where(.peer):checked ~ *) {
      --tw-ring-color: var(--color-indigo-600);
    }
  }
  .peer-focus\:ring-2 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .peer-focus\:ring-indigo-400\/60 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-indigo-400) 60%, transparent);
      }
    }
  }
  .peer-focus\:outline-none {
    &:is(:where(.peer):focus ~ *) {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .selection\:bg-indigo-400\/20 {
    & *::selection {
      background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-400) 20%, transparent);
      }
    }
    &::selection {
      background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-400) 20%, transparent);
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-indigo-400\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-400) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-indigo-400\/40 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 40%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-400) 40%, transparent);
        }
      }
    }
  }
  .hover\:bg-indigo-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-500);
      }
    }
  }
  .hover\:bg-indigo-500\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-500) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-red-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
        }
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:outline-0 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 0px;
    }
  }
  .focus-visible\:outline-1 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-visible\:outline-3 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 3px;
    }
  }
  .focus-visible\:outline-\[\#B9B9B9\]\/50 {
    &:focus-visible {
      outline-color: color-mix(in oklab, #B9B9B9 50%, transparent);
    }
  }
  .active\:scale-95 {
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .md\:gap-2 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .md\:pr-10 {
    @media (width >= 48rem) {
      padding-right: calc(var(--spacing) * 10);
    }
  }
  .lg\:order-1 {
    @media (width >= 64rem) {
      order: 1;
    }
  }
  .lg\:order-2 {
    @media (width >= 64rem) {
      order: 2;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .xl\:top-\[0\.3dvw\] {
    @media (width >= 80rem) {
      top: 0.3dvw;
    }
  }
  .xl\:top-\[0\.45dvw\] {
    @media (width >= 80rem) {
      top: 0.45dvw;
    }
  }
  .xl\:right-\[0\.45dvw\] {
    @media (width >= 80rem) {
      right: 0.45dvw;
    }
  }
  .xl\:left-\[0\.3dvw\] {
    @media (width >= 80rem) {
      left: 0.3dvw;
    }
  }
  .xl\:left-\[0\.6vw\] {
    @media (width >= 80rem) {
      left: 0.6vw;
    }
  }
  .xl\:left-\[0\.45dvw\] {
    @media (width >= 80rem) {
      left: 0.45dvw;
    }
  }
  .xl\:my-\[0\.6dvw\] {
    @media (width >= 80rem) {
      margin-block: 0.6dvw;
    }
  }
  .xl\:mt-\[0\.6dvw\] {
    @media (width >= 80rem) {
      margin-top: 0.6dvw;
    }
  }
  .xl\:mb-\[3dvw\] {
    @media (width >= 80rem) {
      margin-bottom: 3dvw;
    }
  }
  .xl\:size-\[0\.9dvw\] {
    @media (width >= 80rem) {
      width: 0.9dvw;
      height: 0.9dvw;
    }
  }
  .xl\:size-\[1\.2dvw\] {
    @media (width >= 80rem) {
      width: 1.2dvw;
      height: 1.2dvw;
    }
  }
  .xl\:size-\[1\.5dvw\] {
    @media (width >= 80rem) {
      width: 1.5dvw;
      height: 1.5dvw;
    }
  }
  .xl\:size-\[1\.5vw\] {
    @media (width >= 80rem) {
      width: 1.5vw;
      height: 1.5vw;
    }
  }
  .xl\:size-\[1\.8dvw\] {
    @media (width >= 80rem) {
      width: 1.8dvw;
      height: 1.8dvw;
    }
  }
  .xl\:size-\[2\.7dvw\] {
    @media (width >= 80rem) {
      width: 2.7dvw;
      height: 2.7dvw;
    }
  }
  .xl\:size-\[2\.55vw\] {
    @media (width >= 80rem) {
      width: 2.55vw;
      height: 2.55vw;
    }
  }
  .xl\:h-\[1\.2dvw\] {
    @media (width >= 80rem) {
      height: 1.2dvw;
    }
  }
  .xl\:h-\[2\.4dvw\] {
    @media (width >= 80rem) {
      height: 2.4dvw;
    }
  }
  .xl\:h-\[2\.55dvw\] {
    @media (width >= 80rem) {
      height: 2.55dvw;
    }
  }
  .xl\:h-\[3\.3dvw\] {
    @media (width >= 80rem) {
      height: 3.3dvw;
    }
  }
  .xl\:h-\[3dvw\] {
    @media (width >= 80rem) {
      height: 3dvw;
    }
  }
  .xl\:h-\[4\.2dvw\] {
    @media (width >= 80rem) {
      height: 4.2dvw;
    }
  }
  .xl\:h-\[4\.8dvw\] {
    @media (width >= 80rem) {
      height: 4.8dvw;
    }
  }
  .xl\:h-\[calc\(100dvh-5dvw\)\] {
    @media (width >= 80rem) {
      height: calc(100dvh - 5dvw);
    }
  }
  .xl\:min-h-\[4\.8dvw\] {
    @media (width >= 80rem) {
      min-height: 4.8dvw;
    }
  }
  .xl\:w-\[1\.2dvw\] {
    @media (width >= 80rem) {
      width: 1.2dvw;
    }
  }
  .xl\:w-\[2\.4dvw\] {
    @media (width >= 80rem) {
      width: 2.4dvw;
    }
  }
  .xl\:w-\[4\.2dvw\] {
    @media (width >= 80rem) {
      width: 4.2dvw;
    }
  }
  .xl\:w-\[4\.8dvw\] {
    @media (width >= 80rem) {
      width: 4.8dvw;
    }
  }
  .xl\:w-\[15dvw\] {
    @media (width >= 80rem) {
      width: 15dvw;
    }
  }
  .xl\:w-\[16dvw\] {
    @media (width >= 80rem) {
      width: 16dvw;
    }
  }
  .xl\:min-w-\[2\.55vw\] {
    @media (width >= 80rem) {
      min-width: 2.55vw;
    }
  }
  .xl\:grid-cols-4 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .xl\:gap-\[0\.6dvw\] {
    @media (width >= 80rem) {
      gap: 0.6dvw;
    }
  }
  .xl\:gap-\[0\.7dvw\] {
    @media (width >= 80rem) {
      gap: 0.7dvw;
    }
  }
  .xl\:gap-\[1\.2dvw\] {
    @media (width >= 80rem) {
      gap: 1.2dvw;
    }
  }
  .xl\:gap-\[2\.4dvw\] {
    @media (width >= 80rem) {
      gap: 2.4dvw;
    }
  }
  .xl\:space-y-\[0\.6dvw\] {
    @media (width >= 80rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(0.6dvw * var(--tw-space-y-reverse));
        margin-block-end: calc(0.6dvw * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .xl\:space-y-\[1\.2dvw\] {
    @media (width >= 80rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(1.2dvw * var(--tw-space-y-reverse));
        margin-block-end: calc(1.2dvw * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .xl\:rounded-\[0\.3dvw\] {
    @media (width >= 80rem) {
      border-radius: 0.3dvw;
    }
  }
  .xl\:rounded-\[0\.6dvw\] {
    @media (width >= 80rem) {
      border-radius: 0.6dvw;
    }
  }
  .xl\:rounded-\[0\.9dvw\] {
    @media (width >= 80rem) {
      border-radius: 0.9dvw;
    }
  }
  .xl\:border-\[0\.15vw\] {
    @media (width >= 80rem) {
      border-style: var(--tw-border-style);
      border-width: 0.15vw;
    }
  }
  .xl\:p-\[0\.6dvw\] {
    @media (width >= 80rem) {
      padding: 0.6dvw;
    }
  }
  .xl\:p-\[0\.6vw\] {
    @media (width >= 80rem) {
      padding: 0.6vw;
    }
  }
  .xl\:p-\[1\.2dvw\] {
    @media (width >= 80rem) {
      padding: 1.2dvw;
    }
  }
  .xl\:p-\[1\.2vw\] {
    @media (width >= 80rem) {
      padding: 1.2vw;
    }
  }
  .xl\:px-\[0\.7vw\] {
    @media (width >= 80rem) {
      padding-inline: 0.7vw;
    }
  }
  .xl\:px-\[0\.9dvw\] {
    @media (width >= 80rem) {
      padding-inline: 0.9dvw;
    }
  }
  .xl\:px-\[1\.2dvw\] {
    @media (width >= 80rem) {
      padding-inline: 1.2dvw;
    }
  }
  .xl\:py-\[0\.6dvw\] {
    @media (width >= 80rem) {
      padding-block: 0.6dvw;
    }
  }
  .xl\:py-\[1\.2dvw\] {
    @media (width >= 80rem) {
      padding-block: 1.2dvw;
    }
  }
  .xl\:pr-\[3dvw\] {
    @media (width >= 80rem) {
      padding-right: 3dvw;
    }
  }
  .xl\:pb-\[1\.2dvw\] {
    @media (width >= 80rem) {
      padding-bottom: 1.2dvw;
    }
  }
  .xl\:pl-\[2\.7vw\] {
    @media (width >= 80rem) {
      padding-left: 2.7vw;
    }
  }
  .xl\:text-\[0\.86dvw\] {
    @media (width >= 80rem) {
      font-size: 0.86dvw;
    }
  }
  .xl\:text-\[0\.95dvw\] {
    @media (width >= 80rem) {
      font-size: 0.95dvw;
    }
  }
  .xl\:text-\[0\.8625vw\] {
    @media (width >= 80rem) {
      font-size: 0.8625vw;
    }
  }
  .xl\:text-\[1\.15dvw\] {
    @media (width >= 80rem) {
      font-size: 1.15dvw;
    }
  }
  .xl\:text-\[1\.15vw\] {
    @media (width >= 80rem) {
      font-size: 1.15vw;
    }
  }
  .xl\:text-\[1\.43dvw\] {
    @media (width >= 80rem) {
      font-size: 1.43dvw;
    }
  }
  .xl\:text-\[1\.72dvw\] {
    @media (width >= 80rem) {
      font-size: 1.72dvw;
    }
  }
  .xl\:text-\[1dvw\] {
    @media (width >= 80rem) {
      font-size: 1dvw;
    }
  }
  .xl\:text-\[2\.15dvw\] {
    @media (width >= 80rem) {
      font-size: 2.15dvw;
    }
  }
  .xl\:ring-\[0\.075dvw\] {
    @media (width >= 80rem) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0.075dvw + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .xl\:peer-checked\:translate-x-\[1\.8dvw\] {
    @media (width >= 80rem) {
      &:is(:where(.peer):checked ~ *) {
        --tw-translate-x: 1.8dvw;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .xl\:peer-focus\:ring-\[0\.12dvw\] {
    @media (width >= 80rem) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0.12dvw + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .xl\:focus-visible\:outline-\[0\.075dvw\] {
    @media (width >= 80rem) {
      &:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 0.075dvw;
      }
    }
  }
  .xl\:focus-visible\:outline-\[0\.225vw\] {
    @media (width >= 80rem) {
      &:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 0.225vw;
      }
    }
  }
  .dark\:divide-white\/10 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:border-white\/10 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-white\/15 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:border-white\/20 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:border-t-white\/20 {
    &:where(.dark, .dark *) {
      border-top-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-top-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:border-r-white\/20 {
    &:where(.dark, .dark *) {
      border-right-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-right-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:border-b-white\/20 {
    &:where(.dark, .dark *) {
      border-bottom-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:bg-\[\#2b2b2b\] {
    &:where(.dark, .dark *) {
      background-color: #2b2b2b;
    }
  }
  .dark\:bg-\[\#131313\] {
    &:where(.dark, .dark *) {
      background-color: #131313;
    }
  }
  .dark\:bg-\[\#202020\] {
    &:where(.dark, .dark *) {
      background-color: #202020;
    }
  }
  .dark\:bg-\[\#222222\] {
    &:where(.dark, .dark *) {
      background-color: #222222;
    }
  }
  .dark\:bg-\[\#232323\] {
    &:where(.dark, .dark *) {
      background-color: #232323;
    }
  }
  .dark\:bg-black {
    &:where(.dark, .dark *) {
      background-color: var(--color-black);
    }
  }
  .dark\:bg-gray-500 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-500);
    }
  }
  .dark\:bg-indigo-500\/15 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-500) 15%, transparent);
      }
    }
  }
  .dark\:bg-indigo-800\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(39.8% 0.195 277.366) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-800) 10%, transparent);
      }
    }
  }
  .dark\:bg-white\/5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-white\/15 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:bg-zinc-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-700);
    }
  }
  .dark\:bg-zinc-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-800);
    }
  }
  .dark\:stroke-\[\#b4b4b4\] {
    &:where(.dark, .dark *) {
      stroke: #b4b4b4;
    }
  }
  .dark\:stroke-indigo-400 {
    &:where(.dark, .dark *) {
      stroke: var(--color-indigo-400);
    }
  }
  .dark\:stroke-white {
    &:where(.dark, .dark *) {
      stroke: var(--color-white);
    }
  }
  .dark\:text-\[\#b4b4b4\] {
    &:where(.dark, .dark *) {
      color: #b4b4b4;
    }
  }
  .dark\:text-gray-100 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-100);
    }
  }
  .dark\:text-gray-200 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-200);
    }
  }
  .dark\:text-gray-300 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-300);
    }
  }
  .dark\:text-gray-400 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-indigo-400 {
    &:where(.dark, .dark *) {
      color: var(--color-indigo-400);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:placeholder-\[\#b4b4b4\] {
    &:where(.dark, .dark *) {
      &::placeholder {
        color: #b4b4b4;
      }
    }
  }
  .dark\:ring-white\/10 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:ring-white\/20 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:outline-white\/50 {
    &:where(.dark, .dark *) {
      outline-color: color-mix(in srgb, #fff 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .dark\:group-hover\:stroke-indigo-200 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-indigo-200);
        }
      }
    }
  }
  .dark\:group-hover\:stroke-indigo-300 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-indigo-300);
        }
      }
    }
  }
  .dark\:group-hover\:text-indigo-200 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-indigo-200);
        }
      }
    }
  }
  .dark\:group-hover\:text-indigo-300 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-indigo-300);
        }
      }
    }
  }
  .dark\:peer-checked\:ring-indigo-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        --tw-ring-color: var(--color-indigo-400);
      }
    }
  }
  .dark\:hover\:bg-indigo-500\/15 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-indigo-500) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-zinc-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-zinc-700);
        }
      }
    }
  }
  .focus-visible\:dark\:outline-\[\#969696\]\/50 {
    &:focus-visible {
      &:where(.dark, .dark *) {
        outline-color: color-mix(in oklab, #969696 50%, transparent);
      }
    }
  }
  .\[\&\:\:-webkit-inner-spin-button\]\:appearance-none {
    &::-webkit-inner-spin-button {
      appearance: none;
    }
  }
  .\[\&\:\:-webkit-outer-spin-button\]\:appearance-none {
    &::-webkit-outer-spin-button {
      appearance: none;
    }
  }
  .\[\&\>svg\]\:opacity-0 {
    &>svg {
      opacity: 0%;
    }
  }
  .peer-checked\:\[\&\>svg\]\:opacity-100 {
    &:is(:where(.peer):checked ~ *) {
      &>svg {
        opacity: 100%;
      }
    }
  }
}
html, body {
  font-family: "Segoe UI Emoji", "Noto Color Emoji", "Apple Color Emoji", sans-serif;
}
-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  background-color: #F5F5F5;
}
::-webkit-scrollbar {
  width: calc(var(--spacing) * 1.5);
  background-color: transparent;
}
::-webkit-scrollbar-thumb {
  border-radius: calc(infinity * 1px);
  background-color: #d1d1d1;
}
.dark ::-webkit-scrollbar-thumb {
  background-color: #232323;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-outline-style: solid;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
