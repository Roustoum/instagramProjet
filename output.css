/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-indigo-100: oklch(93% 0.034 272.788);
    --color-indigo-200: oklch(87% 0.065 274.039);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-light: 300;
    --font-weight-black: 900;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --radius-4xl: 2rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .isolate {
    isolation: isolate;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }
  .size-\[0\%\] {
    width: 0%;
    height: 0%;
  }
  .size-\[44\.44\%\] {
    width: 44.44%;
    height: 44.44%;
  }
  .size-\[60\%\] {
    width: 60%;
    height: 60%;
  }
  .size-\[80\%\] {
    width: 80%;
    height: 80%;
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-4\/5 {
    height: calc(4/5 * 100%);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-15 {
    height: calc(var(--spacing) * 15);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-\[44\.44\%\] {
    height: 44.44%;
  }
  .h-\[60\%\] {
    height: 60%;
  }
  .h-\[60\.44\%\] {
    height: 60.44%;
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-\[44\.44\%\] {
    min-height: 44.44%;
  }
  .min-h-\[60\%\] {
    min-height: 60%;
  }
  .w-100 {
    width: calc(var(--spacing) * 100);
  }
  .w-\[10\%\] {
    width: 10%;
  }
  .w-\[15\%\] {
    width: 15%;
  }
  .w-\[20\%\] {
    width: 20%;
  }
  .w-\[30\%\] {
    width: 30%;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .min-w-9 {
    min-width: calc(var(--spacing) * 9);
  }
  .min-w-\[60\%\] {
    min-width: 60%;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-\[\#EAEAEA\] {
    border-color: #EAEAEA;
  }
  .border-r-black {
    border-right-color: var(--color-black);
  }
  .border-r-black\/20 {
    border-right-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-right-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .border-b-black {
    border-bottom-color: var(--color-black);
  }
  .border-b-black\/20 {
    border-bottom-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .\!bg-white {
    background-color: var(--color-white) !important;
  }
  .bg-\[\#1\] {
    background-color: #1;
  }
  .bg-\[\#181208\] {
    background-color: #181208;
  }
  .bg-\[\#181818\] {
    background-color: #181818;
  }
  .bg-\[\#181820\] {
    background-color: #181820;
  }
  .bg-\[\#202020\] {
    background-color: #202020;
  }
  .bg-\[\#\] {
    background-color: #;
  }
  .bg-amber-100 {
    background-color: var(--color-amber-100);
  }
  .bg-amber-200 {
    background-color: var(--color-amber-200);
  }
  .bg-amber-300 {
    background-color: var(--color-amber-300);
  }
  .bg-amber-600 {
    background-color: var(--color-amber-600);
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-50\/50 {
    background-color: color-mix(in srgb, oklch(98.5% 0.002 247.839) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-50) 50%, transparent);
    }
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-indigo-100 {
    background-color: var(--color-indigo-100);
  }
  .bg-indigo-400 {
    background-color: var(--color-indigo-400);
  }
  .bg-indigo-400\/10 {
    background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-400) 10%, transparent);
    }
  }
  .bg-indigo-400\/20 {
    background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-400) 20%, transparent);
    }
  }
  .bg-indigo-700 {
    background-color: var(--color-indigo-700);
  }
  .bg-indigo-700\/30 {
    background-color: color-mix(in srgb, oklch(45.7% 0.24 277.023) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-700) 30%, transparent);
    }
  }
  .bg-red-600 {
    background-color: var(--color-red-600);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .stroke-black {
    stroke: var(--color-black);
  }
  .stroke-indigo-700 {
    stroke: var(--color-indigo-700);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.5rem\] {
    font-size: 0.5rem;
  }
  .text-\[0\.25rem\] {
    font-size: 0.25rem;
  }
  .text-\[0\.75rem\] {
    font-size: 0.75rem;
  }
  .text-\[1\.43dvw\] {
    font-size: 1.43dvw;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .text-\[0\.\] {
    color: 0.;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-indigo-700 {
    color: var(--color-indigo-700);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-\[scale_colors\] {
    transition-property: scale colors;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
  }
  .group-hover\:stroke-indigo-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-indigo-500);
      }
    }
  }
  .group-hover\:stroke-indigo-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-indigo-700);
      }
    }
  }
  .group-hover\:stroke-indigo-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-indigo-900);
      }
    }
  }
  .group-hover\:stroke-red-400 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-red-400);
      }
    }
  }
  .group-hover\:text-indigo-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-indigo-500);
      }
    }
  }
  .group-hover\:text-indigo-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-indigo-700);
      }
    }
  }
  .group-hover\:text-indigo-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-indigo-900);
      }
    }
  }
  .selection\:bg-indigo-400\/20 {
    & *::selection {
      background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-400) 20%, transparent);
      }
    }
    &::selection {
      background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-400) 20%, transparent);
      }
    }
  }
  .selection\:bg-indigo-500\/10 {
    & *::selection {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-500) 10%, transparent);
      }
    }
    &::selection {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-500) 10%, transparent);
      }
    }
  }
  .selection\:bg-indigo-500\/20 {
    & *::selection {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
      }
    }
    &::selection {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
      }
    }
  }
  .hover\:bg-indigo-400\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-400) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-indigo-400\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-400) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-indigo-400\/40 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(67.3% 0.182 276.935) 40%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-400) 40%, transparent);
        }
      }
    }
  }
  .hover\:bg-red-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:stroke-indigo-900 {
    &:hover {
      @media (hover: hover) {
        stroke: var(--color-indigo-900);
      }
    }
  }
  .hover\:text-indigo-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-900);
      }
    }
  }
  .focus-visible\:outline-0 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 0px;
    }
  }
  .focus-visible\:outline-1 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-visible\:outline-3 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 3px;
    }
  }
  .focus-visible\:outline-\[\#B9B9B9\]\/50 {
    &:focus-visible {
      outline-color: color-mix(in oklab, #B9B9B9 50%, transparent);
    }
  }
  .active\:scale-95 {
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-9 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 9);
    }
  }
  .md\:flex-col {
    @media (width >= 48rem) {
      flex-direction: column;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .md\:gap-2 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .md\:px-3 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .md\:pr-10 {
    @media (width >= 48rem) {
      padding-right: calc(var(--spacing) * 10);
    }
  }
  .md\:text-base {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .xl\:mb-\[3dvw\] {
    @media (width >= 80rem) {
      margin-bottom: 3dvw;
    }
  }
  .xl\:size-\[2\.55vw\] {
    @media (width >= 80rem) {
      width: 2.55vw;
      height: 2.55vw;
    }
  }
  .xl\:h-\[2\.55dvw\] {
    @media (width >= 80rem) {
      height: 2.55dvw;
    }
  }
  .xl\:h-\[2\.55vw\] {
    @media (width >= 80rem) {
      height: 2.55vw;
    }
  }
  .xl\:h-\[4\.2dvw\] {
    @media (width >= 80rem) {
      height: 4.2dvw;
    }
  }
  .xl\:h-\[4\.8dvw\] {
    @media (width >= 80rem) {
      height: 4.8dvw;
    }
  }
  .xl\:min-w-\[2\.55vw\] {
    @media (width >= 80rem) {
      min-width: 2.55vw;
    }
  }
  .xl\:gap-\[0\.6dvw\] {
    @media (width >= 80rem) {
      gap: 0.6dvw;
    }
  }
  .xl\:gap-\[0\.7dvw\] {
    @media (width >= 80rem) {
      gap: 0.7dvw;
    }
  }
  .xl\:gap-\[0\.7vw\] {
    @media (width >= 80rem) {
      gap: 0.7vw;
    }
  }
  .xl\:gap-\[1\.2dvw\] {
    @media (width >= 80rem) {
      gap: 1.2dvw;
    }
  }
  .xl\:space-y-\[0\.6dvw\] {
    @media (width >= 80rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(0.6dvw * var(--tw-space-y-reverse));
        margin-block-end: calc(0.6dvw * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .xl\:space-y-\[1\.2dvw\] {
    @media (width >= 80rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(1.2dvw * var(--tw-space-y-reverse));
        margin-block-end: calc(1.2dvw * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .xl\:rounded-\[0\.6dvw\] {
    @media (width >= 80rem) {
      border-radius: 0.6dvw;
    }
  }
  .xl\:p-\[1\.2dvw\] {
    @media (width >= 80rem) {
      padding: 1.2dvw;
    }
  }
  .xl\:px-\[0\.7vw\] {
    @media (width >= 80rem) {
      padding-inline: 0.7vw;
    }
  }
  .xl\:px-\[1\.2dvw\] {
    @media (width >= 80rem) {
      padding-inline: 1.2dvw;
    }
  }
  .xl\:pr-\[3dvw\] {
    @media (width >= 80rem) {
      padding-right: 3dvw;
    }
  }
  .xl\:text-\[0\.86dvw\] {
    @media (width >= 80rem) {
      font-size: 0.86dvw;
    }
  }
  .xl\:text-\[0\.86vw\] {
    @media (width >= 80rem) {
      font-size: 0.86vw;
    }
  }
  .xl\:text-\[0\.575dvw\] {
    @media (width >= 80rem) {
      font-size: 0.575dvw;
    }
  }
  .xl\:text-\[1\.15dvw\] {
    @media (width >= 80rem) {
      font-size: 1.15dvw;
    }
  }
  .xl\:text-\[1\.15vw\] {
    @media (width >= 80rem) {
      font-size: 1.15vw;
    }
  }
  .xl\:text-\[1\.43dvw\] {
    @media (width >= 80rem) {
      font-size: 1.43dvw;
    }
  }
  .xl\:text-\[1\.72dvw\] {
    @media (width >= 80rem) {
      font-size: 1.72dvw;
    }
  }
  .xl\:focus-visible\:outline-\[0\.075dvw\] {
    @media (width >= 80rem) {
      &:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 0.075dvw;
      }
    }
  }
  .xl\:focus-visible\:outline-\[0\.075vw\] {
    @media (width >= 80rem) {
      &:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 0.075vw;
      }
    }
  }
  .xl\:focus-visible\:outline-\[0\.225vw\] {
    @media (width >= 80rem) {
      &:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 0.225vw;
      }
    }
  }
  .dark\:border-white\/15 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:border-r-white\/20 {
    &:where(.dark, .dark *) {
      border-right-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-right-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:border-b-white\/20 {
    &:where(.dark, .dark *) {
      border-bottom-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:bg-\[\#22222\] {
    &:where(.dark, .dark *) {
      background-color: #22222;
    }
  }
  .dark\:bg-\[\#131313\] {
    &:where(.dark, .dark *) {
      background-color: #131313;
    }
  }
  .dark\:bg-\[\#202020\] {
    &:where(.dark, .dark *) {
      background-color: #202020;
    }
  }
  .dark\:bg-\[\#222222\] {
    &:where(.dark, .dark *) {
      background-color: #222222;
    }
  }
  .dark\:bg-\[\#\] {
    &:where(.dark, .dark *) {
      background-color: #;
    }
  }
  .dark\:bg-white\/15 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:stroke-indigo-400 {
    &:where(.dark, .dark *) {
      stroke: var(--color-indigo-400);
    }
  }
  .dark\:stroke-white {
    &:where(.dark, .dark *) {
      stroke: var(--color-white);
    }
  }
  .dark\:dark\:text-indigo-400 {
    &:where(.dark, .dark *) {
      &:where(.dark, .dark *) {
        color: var(--color-indigo-400);
      }
    }
  }
  .dark\:text-gray-200 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-200);
    }
  }
  .dark\:text-indigo-400 {
    &:where(.dark, .dark *) {
      color: var(--color-indigo-400);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:group-hover\:stroke-indigo-200 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-indigo-200);
        }
      }
    }
  }
  .dark\:group-hover\:stroke-indigo-300 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-indigo-300);
        }
      }
    }
  }
  .dark\:group-hover\:stroke-indigo-500 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-indigo-500);
        }
      }
    }
  }
  .dark\:group-hover\:stroke-indigo-900 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-indigo-900);
        }
      }
    }
  }
  .dark\:group-hover\:text-indigo-200 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-indigo-200);
        }
      }
    }
  }
  .dark\:group-hover\:text-indigo-300 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-indigo-300);
        }
      }
    }
  }
  .dark\:hover\:stroke-indigo-200 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          stroke: var(--color-indigo-200);
        }
      }
    }
  }
  .dark\:hover\:text-indigo-200 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-indigo-200);
        }
      }
    }
  }
  .focus-visible\:dark\:outline-\[\#969696\]\/50 {
    &:focus-visible {
      &:where(.dark, .dark *) {
        outline-color: color-mix(in oklab, #969696 50%, transparent);
      }
    }
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
